<!DOCTYPE html>
<html lang="ja">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta http-equiv="Set-Cookie" content="～" expires=Fri, 31-Dec-1999 23:59:59 GMT>
    <link href="css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="style.css" type="text/css" />
    <link rel="stylesheet" href="css/font-awesome.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.2/underscore-min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/jquery.csvToTable.js"></script>
    <script src="js/jquery.csv2table-0.02-b-4.8.js"></script>
    <script type="text/javascript">
         


    // DirectLine
    var talkWithBot = (function () {
            return {

                // Plase set your secretKey
                directLineSecret: "zV0HkdnH_X4.cwA.drg.hNxhBVv3gHH-n8jJt3t_lFigzBz93_GaF97t2aZsG7w",

                convId: null,
                watermark: null,

                // ▼カンバセーションIDを作成
                makeConvId: function () {

                    console.log("makeConvId");

                    return $.ajax({
                        url: "https://directline.botframework.com/api/conversations",
                        type: "POST",
                        crossDomain: true,
                        contentType: "application/json",
                        cache: false,
                        headers: {
                            Authorization: "Botconnector " + this.directLineSecret
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            console.log(XMLHttpRequest);
                            console.log(textStatus);
                            console.log(errorThrown);
                        }
                    });

                },

                // ▼メッセージを送信
                sendMessage: function (convId, msg) {

                    $('#input').val("送信中...");

                    var user = "user_" + convId;

                    $.ajax({
                        method: "POST",
                        contentType: "application/json",
                        headers: {
                            Authorization: "Botconnector " + this.directLineSecret
                        },
                        url: 'https://directline.botframework.com/api/conversations/' + convId + '/messages',
                        data: JSON.stringify({
                            "text": msg, // 送信するメッセージ
                            "from": user // 同じユーザーからのメッセージであることを認識させるために、fromを入れる
                        }),
                        success: function (obj) {
                            alert("talkWithBot:メッセージを送りました！");
                            $('#input').val("");
                        }
                    });

                },

                // ▼メッセージを取得する
                getMessage: function (convId, watermark) {

                    var url;

                    // ウォーターマークの有無により、URLの分岐
                    if (watermark) {
                        url = 'https://directline.botframework.com/api/conversations/' + convId + '/messages?watermark=' + watermark;
                    } else {
                        url = 'https://directline.botframework.com/api/conversations/' + convId + '/messages';
                    }

                    return $.ajax({
                        method: "GET",
                        contentType: "application/json",
                        headers: {
                            Authorization: "Botconnector " + this.directLineSecret
                        },
                        url: url,
                        success: function (obj) {

                            // textareに、結果を出力
                            $("#textarea").val(JSON.stringify(obj.messages));

                            // watermarkの更新
                            talkWithBot.watermark = obj.watermark;

                            //クッキーにも保存(30分間)
                            var date = new Date();
                            date.setTime(date.getTime() + (30 * 60 * 1000));
                            $.cookie("watermark", obj.watermark, {
                                expires: date
                            });

                        }
                    });
                },
                // 初期動作 (カンバセーションIDを用意する)
                init: function () {

                    // クッキーにwatermarkがあれば、それを再利用
                    if ($.cookie("watermark")) {
                        talkWithBot.watermark = $.cookie("watermark");
                    }


                    if ($.cookie("conversationId")) {

                        // すでにクッキーにカンバセーションIDがある場合、クッキーのものを再利用

                        talkWithBot.convId = $.cookie("conversationId");

                        // カンバセーションIDを表示、準備完了！
                        $("#convId").text(talkWithBot.convId + " 準備OK!");



                    } else {

                        // ない場合は、APIにリクエストして作成する

                        talkWithBot
                            .makeConvId()
                            .then(function (result) {

                                talkWithBot.convId = result.conversationId;

                                // カンバセーションIDを表示、準備完了！
                                $("#convId").text(talkWithBot.convId + " 準備OK!");

                                // Cookieに保存(30分間を期限)
                                var date = new Date();
                                date.setTime(date.getTime() + (30 * 60 * 1000));
                                $.cookie("conversationId", talkWithBot.convId, {
                                    expires: date
                                });
                            });
                    }

                }

            };

        })();

        //はじまり
        function init() {
            try{
                ws = new WebSocket('ws://' + 'aipocweb.azurewebsites.net' + '/apis/wsserver');

                function open() {
                    if (ws == null) {
                        // WebSocket の初期化
                        ws = new WebSocket(websocketUri);
                    }
                }

                //ConversationIDの取得
                talkWithBot.init();


                // 接続イベント
                ws.onopen = function onOpen(evt) {
                    //ここで待受け画面に切り替える
                    waitFace();
                }

                 // メッセージ受信イベント
                ws.onmessage = function onMessage(evt) {
                    if (evt && evt.data) {
                        var jsonData = JSON.parse(evt.data);

                        // 状態により画面表示を切り替える
                        switch (jsonData["destStatus"]) {
                            case "waitFace":
                                waitFace();
                                break;
                            case "waitQuestion":
                                waitQuestion();
                                break;
                            case "showAnswer":
                                showAnswer();
                                break;
                            case "endApplication":
                                dendApplication();
                                break;
                            //以下は聞き取れなかったケース
                            case "unknown1":
                                unknown();
                                $("#sotasays").html("ごめんなさい。</br>もう一回聞かせてほしいなぁ？");
                                break;
                            case "unknown2":
                                unknown();
                                $("#sotasays").html("お仕事も大事だけど、</br>今は縁側でお茶飲みながらのんびりしたいなぁ。");
                                break;
                            case "unknown3":
                                unknown();
                                $("#sotasays").html("実は最近悩んでいて・・・</br>一緒にお酒でも飲みませんか？");
                                break;
                            case "unknown4":
                                unknown();
                                $("#sotasays").html("僕は、ドラえもんじゃなくて、ソータだよ！");
                                break;
                            case "unknown5":
                                unknown();
                                $("#sotasays").html("社長さん、儲かってまっか？");
                                break;
                        }

                        if (jsonData["MsgId"] == 0) {
                            var data = jsonData["Text"].split("#");
                            $("#sotasays").html(data[0]);
                            showAnswer(data[1],data[2]);
                        }

                    }
                 }

                 // エラーイベント
                 ws.onerror = onError =  function onError(event) {
                     alert("エラーが発生しました");
                 }

                 // 切断イベント
                 ws.onclose = function onClose(event) {
                     //chat("切断しました。3秒後に再接続します。(" + event.code + ")");
                     ws = null;
                     setTimeout("open()", 3000);
                 }
            } catch (e) { alert(e.message); }
        };

        function waitFace() {
            //$('#page').load('01_search.html');
            $("#titletext").text("質問を待っています");
            $("#sotasays").html("ぼくにしてほしいことはなにかな？")
            $("#titleIcons").removeClass("fa fa-volume-control-phone").removeClass("fa fa-volume-up").addClass("fa fa-user-o");
            //$("#dynamicArea").html('<div class="col-md-12"><p><input type="button" class="btn btn-primary" value="お店の人をよぶ" style="font-size:28px; width:400px; height:100px" onclick="history.back()"> <input type="button" class="btn btn-primary" value="場所を案内してもらう" style="font-size:28px; width:400px; height:100px" onclick="history.back()"></p><p><input type="button" class="btn btn-primary" value="いっしょにあそぶ" style="font-size:28px; width:400px; height:100px" onclick="history.back()"> <input type="button" id="findGoods"class="btn btn-primary" value="おすすめ商品をきく" style="font-size:28px; width:400px; height:100px" onclick="history.back()"></p></div>')
        }

       //「おすすめ商品」を選択したあと
        $(document).on('click', '#findGoods', function () {
            console.log("おすすめ押された");
            $("#sotasays").html("気になることばを入力してね")
            $("#titleIcons").removeClass("fa fa-volume-control-phone").removeClass("fa fa-volume-up").addClass("fa fa-user-o");
            $("#dynamicArea").html('<div class="col-md-12"><div class="form-group"><div class="row"><div class="col-xs-6"><input type="text" name="email" class="form-control input-lg" size="30"></div><input type="image" name="btnsearch" src="img/search.png" alt="さがす" style="width:45px; height:45px" class="blink"></div></div></div> ')
        });

        //「検索」ボタンを選択
        $(document).on('click', '#search', function () {
            console.log((searchword).val())
            talkWithBot.sendMessage(talkWithBot.convId, (searchword).val())            
        });



        //function waitQuestion() {
        //    //$('#page').load('02_listen.html');
        //    $("#titletext").text("質問を待ってます");
        //    $("#sotasays").html("いらっしゃいませ！<br>なにかご用ですか？")
        //    $("#titleIcons").removeClass("fa-user-o").removeClass("fa fa-volume-up").addClass("fa fa-volume-control-phone");
        //    $("#dynamicArea").html('<div class="switch" style="width:100%;text-align:center;color:#e00000;font-size:70px"><font face="メイリオ"><B>目が青くなったら、質問してね！</B></font></div>')
        //}

        function showAnswer(action, src) {
            $("#titletext").text("答えてくれます");
            $("#titleIcons").removeClass("fa-user-o").removeClass("fa fa-volume-control-phone").addClass("fa fa-volume-up");
            $("#sotaImage").attr('src', 'img/sota_03.jpg');
            //$("#dynamicArea").load('03_answerin.html');
            $("#dynamicArea").text('')
            switch (action) {
                case "list":
                    //$("#dynamicArea").load('03_answerin.html');
                    $("#dynamicArea").html('<table id="dt-commodity"class="table table-striped table-responsive"></table>');
                    //$('#dt-commodity').CSVToTable(src);
                    $('#dt-commodity').csv2table(src);
                    break;
                case "img":
                    $("#dynamicArea").html('<img id="ansImg" src="img/sota_01.jpg" class="media-object img-rounded img-responsive flexiblebox"/>');
                    $("#ansImg").attr('src', src);
                    break;
                case "noaction":
                    break;
                case null:
                    break;
            }

            function unknown() {
                //$('#page').load('03_answer.html');
                $("#titletext").text("うまく聞き取れなかったみたい・・・");
                $("#titleIcons").removeClass("fa fa-user").removeClass("fafa-volume-control-phone").addClass("fa fa fa-volume-up");
                $("#sotaImage").attr('src', 'img/sota_03.jpg');
                $("#dynamicArea").text('')
            }

            function endApplication() {
                document.getElementById("output").value = "終了";
            }

        }
        init();
    </script>
</head>
<body style="background-color:white">
    <div class="container-fluid">
        <div class="row">
            <div id="page"></div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row"><div class="col-md-12"><p></p> </div> </div>
        <div class="row">
            <div class="col-md-12">
                <div class="titleset">
                    <p class="titleicon"><i id="titleIcons" class="fa fa-chain-broken" aria-hidden="true"></i></p>
                    <p id="titletext" class="title">開始したらここが変わります</p>
                </div>
            </div>
        </div>
        <div class="row flexiblebox">
            <div class="col-md-9">
                <div class="balloon-1-right flexiblebox" display:inline;>
                    <h1 class="sota" id="sotasays">開始したらここが変わります</h1>
                </div>
            </div>
            <div class="col-md-3 flexiblebox">
                <img id="sotaImage" src="img/sota_01.jpg" class="media-object img-circle img-responsive flexiblebox" />
            </div>
        </div>
        <hr />
        <div class="row">
            <div id="dynamicArea" class="center-block">
                <div class="col-md-12">
                    <p><input type="button" class="btn btn-primary" value="お店の人をよぶ" style="font-size:28px; width:400px; height:100px" onclick="history.back()">
                        <input type="button" class="btn btn-primary" value="場所を案内してもらう" style="font-size:28px; width:400px; height:100px" onclick="history.back()"></p>
                    <p><input type="button" class="btn btn-primary" value="いっしょにあそぶ" style="font-size:28px; width:400px; height:100px" onclick="history.back()">
                        <input type="button" id="findGoods"class="btn btn-primary" value="おすすめ商品をきく" style="font-size:28px; width:400px; height:100px" onclick="history.back()"></p>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="row">
                                <div class="col-xs-6">
                                    <input type="text" id="searchword" name="searchwrd" class="form-control input-lg" size="30">
                                </div>
                                    <input type="image" id="search" name="btnsearch" src="img/search.png" alt="さがす" style="width:45px; height:45px">
                                </div>
                        </div>
                    </div>
                </div> 
            </div>
        </div>
    </div>
</body>
</html>